---
permalink: test
---

TINKERERS AND BREAKERS

The root of much of the conflicts in Bitcoin[1] since its
launch has been the struggle between purists and pragmatists,
to borrow a phrase from Venkatash Rao.

Purists tend to be technically minded, often they are developers
actually working on code for the Bitcoin protocol or
hobby projects on top of it. For the purist, anything in Bitcoin
that seems ineffecient when measured against an ideal technical
standard is both inexplicable and anxiety inducing. 

Pragmatists might be technically minded, but they're more
intersted in solving personal problems or helping customers.
Instead of measuring their efficiency against platonic benchmarks,
they measure it in terms of profit and loss in a marketplace.
How they got there is mostly irrelvevant. 

Purists tend to see pragmatists as stupid, arrogant, and
under-appreciative of the hard work that went into maintainining
the sytem the pragamatists are building on. 

Pragmatics tend to see purists with a mixture of reverence and
annoyance. They admire their technical knowledge but hate
being told not to try something because the nerd wants to optimise
something behind the scenes or demands you invest time and energy
in an entirely new, more efficient solution than the one
that works perfectly fine now and which customrers are paying for
even if there are some kinks. Money is being left on the table!

Both are correct about the other. Pragmatists are often quite
stupid, and the ones that aren't appear stupid because their failure
rate is high. And purists, despite their technical intelligence, 
are often less wealthy, less practically succesful, and less
interesting to get a beer with than a pragmatist.

What the pragmatists don't understand is that the purists
aren't as smart as they sound. Specialized technical knowledge
does not always mean general worldly knowledge. And thus
they tend to overvalue the purists opinion. 

What the purists don't understand is that pragmatists, in their
stupidty, are smarter than they look, and that behavior the seems
inefficient might be efficient within a given set of constraints.

For example, a Bitcoin transaction might be inefficient 
when the fee rate is sitting too high, that is until you 
introduce another variable like an emergency or the loss
of ones credit card or a bank account closure. Now that
high fee that previously looked ineffecicent is in fact the
most effecicent option within the constraints you have.

Or somebody's choice to use a less popular, more difficult
coding language may look ineffecient to the purist, until they
learn that teh person didn't know any other language to use.

Or a customer might just want to pay extra or spend more work 
on something than is ideally necessary for the lulz. It doesn't
matter. Someone is paying.

The problem is that no purist model can ever account for all 
these possible variables. And if something seems ineffecient, the purist
tends to choose to limit even the possibility of that 
behavior. What this looks like in Bitcoin is a limit on
the OP RETURN or the block size because "who would 
ever use Bitcoin for data storage when this other option is
more effecient?" Or mockery of another project because
the actvity on that chain looks idioticâ€”a popular example is 
the WeatherSV app on BSV that was pumping weather data into the
chain. To the purists, behavior like this was inexplicalbe.

To the fly-on-the wall pragmatist, a






[1] I'm being charitable. Obviously there are bad actors
who don't even disagree at all but just want to push
the development in a direction favorble to themselves and
their business.
